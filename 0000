Copy

#include "i2c.h"
#include <stdint.h>

#define BUFFER_SIZE 128

// Буфер для хранения принятых данных
uint8_t i2c_buffer[BUFFER_SIZE];
uint8_t len_received = 0; // Количество принятых байт

// Инициализация I2C на SERCOM5, пины PA22 (SDA), PA23 (SCL)
I2C i2c(SERCOM5, PIN_PA22, PIN_PA23, true);

// Callback-функция, которая будет вызвана при получении данных
void onReceiveCallback(int bytesReceived) {
    // Сохраняем количество принятых байт
    len_received = bytesReceived;

    // Чтение данных из буфера I2C
    for (int i = 0; i < bytesReceived; i++) {
        i2c_buffer[i] = i2c.rx_buf[i]; // rx_buf — это буфер, куда I2C сохраняет данные
    }

    // Пример обработки данных: отправка по UART
    for (int i = 0; i < bytesReceived; i++) {
        uart_send_char(i2c_buffer[i]); // Предположим, что у вас есть функция uart_send_char
    }
}

void setup() {
    // Инициализация I2C Slave
    i2c.setSlave(0x9); // Установка адреса I2C Slave (0x9)

    // Регистрация callback-функции
    i2c.onReceive(onReceiveCallback);
}

void loop() {
    // Основной цикл может быть пустым, так как обработка данных происходит в callback-функции
}
